name: native-build-android
description: Builds an apk or appbundle
branding:
  icon: box
  color: green
inputs:
  working-directory:
    description: The root directory of the app within this repository
    default: ./
  build-cmd:
    description: The full build command, can be used to add arguments
    default: ./gradlew assembleEcogenieStaging
  keystore-base64:
    description: "keystore with which to sign the app"
    required: true
  keystore-password:
    description: "The password for the playstore key used to sign the app"
    required: true
  keystore-alias:
    description: "The alias of keystore"
    required: true   

runs:
  using: "composite"
  steps:
    - name: Check java found
      id: check_java
      shell: bash
      run: |
        if java --version; then
            echo "installed=true" >> "$GITHUB_OUTPUT"
        else
            echo "installed=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Install java
      if: steps.check_java.outputs.installed == 'false'
      uses: actions/setup-java@v3
      with:
        distribution: "zulu"
        java-version: "17.x"
        cache: "gradle"

    # - name: Setup Android SDK
    #   uses: android-actions/setup-android@v3.2.2

    - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
     - name: Grant execute permission for gradlew
        run: chmod +x gradlew

    - name: Decode keystore and create jks and properties file for signing the app
      shell: bash
      run: |
        echo "$KEYSTORE" | base64 --decode > app/keystore.jks
        echo "storeFile=keystore.jks" >> key.properties
        echo "keyAlias=$KEYSTORE_ALIAS" >> key.properties
        echo "storePassword=$KEYSTORE_PASSWORD" >> key.properties
        echo "keyPassword=$KEYSTORE_PASSWORD" >> key.properties
      env:
        KEYSTORE: ${{ inputs.keystore-base64 }}
        KEYSTORE_PASSWORD: ${{ inputs.keystore-password }}
        KEYSTORE_ALIAS: ${{ inputs.keystore-alias }}
      working-directory: ${{ inputs.working-directory }}

    - name: Clean build
      run: |
        ./gradlew --stop
        ./gradlew clean
      shell: bash
      working-directory: ${{ inputs.working-directory }}
        
    - name: Build
      run: ${{ inputs.build-cmd }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
